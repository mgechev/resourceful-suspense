{
  "version": 3,
  "sources": ["../../../../../../node_modules/@ngx-templates/shared/fesm2022/ngx-templates-shared-infinite-scroll.mjs"],
  "sourcesContent": ["import * as i0 from '@angular/core';\nimport { inject, PLATFORM_ID, Renderer2, NgZone, input, output, ChangeDetectionStrategy, Component } from '@angular/core';\nimport { WINDOW } from '@ngx-templates/shared/services';\nimport { IconComponent } from '@ngx-templates/shared/icon';\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\n\n// This is a scroll offset value that\n// takes into account the relative size\n// of the footer.\nconst SCROLL_OFFSET = 320;\nclass InfiniteScrollComponent {\n  constructor() {\n    this._win = inject(WINDOW);\n    this._doc = inject(DOCUMENT);\n    this._platformId = inject(PLATFORM_ID);\n    this._renderer = inject(Renderer2);\n    this._zone = inject(NgZone);\n    this._endReached = false;\n    this._listeners = [];\n    /**\n     * Provide a custom scroll container.\n     *\n     * Default: `window`\n     */\n    this.scrollCont = input(null);\n    /**\n     * Emitted when the end of the container is reached.\n     *\n     * @event CompleteFn – Should be called when the data is loaded.\n     */\n    this.loadNext = output();\n  }\n  ngOnInit() {\n    this._addEventListeners();\n  }\n  ngOnDestroy() {\n    for (const l of this._listeners) {\n      l();\n    }\n  }\n  onLoadNext() {\n    this._endReached = true;\n    this.loadNext.emit(() => {\n      this._endReached = false;\n    });\n  }\n  _addEventListeners() {\n    if (!isPlatformBrowser(this._platformId)) {\n      return;\n    }\n    this._zone.runOutsideAngular(() => {\n      const scrollCont = this.scrollCont();\n      let listener;\n      const endReached = (scrollHeight, scrolledY) => {\n        if (!this._endReached && SCROLL_OFFSET >= scrollHeight - scrolledY) {\n          this._zone.run(() => this.onLoadNext());\n        }\n      };\n      if (!scrollCont) {\n        listener = this._renderer.listen(this._win, 'scroll', () => {\n          const scrolledY = this._win.scrollY + this._win.innerHeight;\n          const scrollHeight = this._doc.body.scrollHeight;\n          endReached(scrollHeight, scrolledY);\n        });\n      } else {\n        const el = scrollCont;\n        listener = this._renderer.listen(el, 'scroll', () => {\n          // Since the scroll could be inverted, we are using the absolute value.\n          const scrolledY = el.clientHeight + Math.abs(el.scrollTop);\n          endReached(el.scrollHeight, scrolledY);\n        });\n      }\n      this._listeners.push(listener);\n    });\n  }\n  static {\n    this.ɵfac = function InfiniteScrollComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || InfiniteScrollComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: InfiniteScrollComponent,\n      selectors: [[\"ngx-infinite-scroll\"]],\n      inputs: {\n        scrollCont: [1, \"scrollCont\"]\n      },\n      outputs: {\n        loadNext: \"loadNext\"\n      },\n      decls: 4,\n      vars: 0,\n      consts: [[\"aria-label\", \"Load more products\", 1, \"fallback-btn\", 3, \"click\"], [\"size\", \"lg\", \"name\", \"Downloading\"]],\n      template: function InfiniteScrollComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"button\", 0);\n          i0.ɵɵlistener(\"click\", function InfiniteScrollComponent_Template_button_click_0_listener() {\n            return ctx.onLoadNext();\n          });\n          i0.ɵɵelement(1, \"ngx-icon\", 1);\n          i0.ɵɵelementStart(2, \"span\");\n          i0.ɵɵtext(3, \"Load More\");\n          i0.ɵɵelementEnd()();\n        }\n      },\n      dependencies: [IconComponent],\n      styles: [\"[_nghost-%COMP%]{display:flex;justify-content:center;margin-top:3rem}[_nghost-%COMP%]   button[_ngcontent-%COMP%]{color:var(--color-quaternary);background-color:transparent;transition:color .3s ease;align-items:center;border:none;display:flex;font-weight:600}[_nghost-%COMP%]   button[_ngcontent-%COMP%]   ngx-icon[_ngcontent-%COMP%]{margin-right:.5rem}[_nghost-%COMP%]   button[_ngcontent-%COMP%]:hover{color:var(--color-primary)}\"],\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(InfiniteScrollComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-infinite-scroll',\n      imports: [IconComponent],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<button\\n  class=\\\"fallback-btn\\\"\\n  (click)=\\\"onLoadNext()\\\"\\n  aria-label=\\\"Load more products\\\"\\n>\\n  <ngx-icon size=\\\"lg\\\" name=\\\"Downloading\\\" />\\n  <span>Load More</span>\\n</button>\\n\",\n      styles: [\":host{display:flex;justify-content:center;margin-top:3rem}:host button{color:var(--color-quaternary);background-color:transparent;transition:color .3s ease;align-items:center;border:none;display:flex;font-weight:600}:host button ngx-icon{margin-right:.5rem}:host button:hover{color:var(--color-primary)}\\n\"]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { InfiniteScrollComponent };\n"],
  "mappings": "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",
  "names": []
}
