{
  "version": 3,
  "sources": ["../../../../../../node_modules/@ngx-templates/shared/fesm2022/ngx-templates-shared-theme.mjs"],
  "sourcesContent": ["import * as i0 from '@angular/core';\nimport { inject, signal, Injectable, Pipe, input, ChangeDetectionStrategy, Component } from '@angular/core';\nimport { IconComponent } from '@ngx-templates/shared/icon';\nimport { DOCUMENT } from '@angular/common';\nimport { LocalStorage } from '@ngx-templates/shared/services';\nfunction ThemeSwitchComponent_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"themeLabel\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, ctx_r0.currentTheme()));\n  }\n}\nconst THEME_LS_KEY = 'ngx-theme';\nconst getThemeClass = t => `ngx-${t}-theme`;\n/**\n * Provides an API for changing the UI theme\n * The initialization logic can be found in index.html\n */\nclass ThemeService {\n  constructor(rendererFactory) {\n    this._doc = inject(DOCUMENT);\n    this._storage = inject(LocalStorage);\n    this._current = signal(null);\n    this._renderer = rendererFactory.createRenderer(null, null);\n  }\n  /**\n   * Returns a read-only Signal with the current theme.\n   *\n   * @returns\n   */\n  getTheme() {\n    this._initSignal();\n    return this._current.asReadonly();\n  }\n  /**\n   * Change current theme to light, dark or system one\n   *\n   * @param theme\n   */\n  setTheme(theme) {\n    this._initSignal();\n    const doc = this._doc.documentElement;\n    if (this._current() !== 'system') {\n      this._renderer.removeClass(doc, getThemeClass(this._current()));\n      this._storage.remove(THEME_LS_KEY);\n    }\n    if (theme !== 'system') {\n      this._renderer.addClass(doc, getThemeClass(theme));\n      this._storage.set(THEME_LS_KEY, theme);\n    }\n    this._current.set(theme);\n  }\n  /**\n   * Initialize the current theme signal from the local storage, if null.\n   */\n  _initSignal() {\n    if (!this._current()) {\n      const current = this._storage.get(THEME_LS_KEY);\n      this._current.set(current ? current : 'system');\n    }\n  }\n  static {\n    this.ɵfac = function ThemeService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ThemeService)(i0.ɵɵinject(i0.RendererFactory2));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: ThemeService,\n      factory: ThemeService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThemeService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: i0.RendererFactory2\n  }], null);\n})();\nconst THEME_TO_LABEL = {\n  ['system']: 'System',\n  ['light']: 'Light',\n  ['dark']: 'Dark'\n};\nclass ThemeLabelPipe {\n  transform(value) {\n    return THEME_TO_LABEL[value];\n  }\n  static {\n    this.ɵfac = function ThemeLabelPipe_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ThemeLabelPipe)();\n    };\n  }\n  static {\n    this.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n      name: \"themeLabel\",\n      type: ThemeLabelPipe,\n      pure: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThemeLabelPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'themeLabel'\n    }]\n  }], null, null);\n})();\nconst THEME_SEQ = ['system', 'light', 'dark'];\nconst THEME_TO_ICON = {\n  ['system']: 'Routine',\n  ['light']: 'LightMode',\n  ['dark']: 'DarkMode'\n};\nclass ThemeSwitchComponent {\n  constructor() {\n    this._theme = inject(ThemeService);\n    this.currentTheme = this._theme.getTheme();\n    this.iconOnly = input(false);\n    this.THEME_TO_ICON = THEME_TO_ICON;\n  }\n  onThemeSwitch() {\n    const currentIdx = THEME_SEQ.findIndex(t => t === this.currentTheme());\n    const newIdx = (currentIdx + 1) % THEME_SEQ.length;\n    this._theme.setTheme(THEME_SEQ[newIdx]);\n  }\n  static {\n    this.ɵfac = function ThemeSwitchComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ThemeSwitchComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: ThemeSwitchComponent,\n      selectors: [[\"ngx-theme-switch\"]],\n      inputs: {\n        iconOnly: [1, \"iconOnly\"]\n      },\n      decls: 4,\n      vars: 5,\n      consts: [[3, \"click\", \"title\"], [\"size\", \"xlg\", 3, \"name\"]],\n      template: function ThemeSwitchComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"button\", 0);\n          i0.ɵɵpipe(1, \"themeLabel\");\n          i0.ɵɵlistener(\"click\", function ThemeSwitchComponent_Template_button_click_0_listener() {\n            return ctx.onThemeSwitch();\n          });\n          i0.ɵɵtemplate(2, ThemeSwitchComponent_Conditional_2_Template, 3, 3, \"span\");\n          i0.ɵɵelement(3, \"ngx-icon\", 1);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"title\", !ctx.iconOnly() ? \"Change the current theme\" : i0.ɵɵpipeBind1(1, 3, ctx.currentTheme()));\n          i0.ɵɵadvance(2);\n          i0.ɵɵconditional(!ctx.iconOnly() ? 2 : -1);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"name\", ctx.THEME_TO_ICON[ctx.currentTheme()]);\n        }\n      },\n      dependencies: [IconComponent, ThemeLabelPipe],\n      styles: [\"[_nghost-%COMP%]   button[_ngcontent-%COMP%]{text-transform:uppercase;font-size:.625rem;letter-spacing:.125rem}[_nghost-%COMP%]{display:block}[_nghost-%COMP%]   button[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:flex-end;width:auto;height:auto;border:none;background:transparent;padding:0;color:var(--color-quaternary);transition:color .3s ease;cursor:pointer}[_nghost-%COMP%]   button[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{margin-right:.25rem;width:0;overflow:hidden;transition:width .2s ease}[_nghost-%COMP%]   button[_ngcontent-%COMP%]:hover > span[_ngcontent-%COMP%]{width:100%}[_nghost-%COMP%]   button[_ngcontent-%COMP%]:hover{color:var(--color-primary)}\"],\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThemeSwitchComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-theme-switch',\n      imports: [IconComponent, ThemeLabelPipe],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<button\\n  (click)=\\\"onThemeSwitch()\\\"\\n  [title]=\\\"\\n    !iconOnly() ? 'Change the current theme' : (currentTheme() | themeLabel)\\n  \\\"\\n>\\n  @if (!iconOnly()) {\\n    <span>{{ currentTheme() | themeLabel }}</span>\\n  }\\n  <ngx-icon [name]=\\\"THEME_TO_ICON[currentTheme()]\\\" size=\\\"xlg\\\" />\\n</button>\\n\",\n      styles: [\":host button{text-transform:uppercase;font-size:.625rem;letter-spacing:.125rem}:host{display:block}:host button{display:flex;align-items:center;justify-content:flex-end;width:auto;height:auto;border:none;background:transparent;padding:0;color:var(--color-quaternary);transition:color .3s ease;cursor:pointer}:host button span{margin-right:.25rem;width:0;overflow:hidden;transition:width .2s ease}:host button:hover>span{width:100%}:host button:hover{color:var(--color-primary)}\\n\"]\n    }]\n  }], null, null);\n})();\nconst THEME_COMPONENTS = [ThemeSwitchComponent];\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { THEME_COMPONENTS, ThemeService, ThemeSwitchComponent };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,SAAS,4CAA4C,IAAI,KAAK;AAC5D,MAAI,KAAK,GAAG;AACV,IAAG,eAAe,GAAG,MAAM;AAC3B,IAAG,OAAO,CAAC;AACX,IAAG,OAAO,GAAG,YAAY;AACzB,IAAG,aAAa;AAAA,EAClB;AACA,MAAI,KAAK,GAAG;AACV,UAAM,SAAY,cAAc;AAChC,IAAG,UAAU;AACb,IAAG,kBAAqB,YAAY,GAAG,GAAG,OAAO,aAAa,CAAC,CAAC;AAAA,EAClE;AACF;AACA,IAAM,eAAe;AACrB,IAAM,gBAAgB,OAAK,OAAO,CAAC;AAKnC,IAAM,eAAN,MAAM,cAAa;AAAA,EACjB,YAAY,iBAAiB;AAC3B,SAAK,OAAO,OAAO,QAAQ;AAC3B,SAAK,WAAW,OAAO,YAAY;AACnC,SAAK,WAAW,OAAO,IAAI;AAC3B,SAAK,YAAY,gBAAgB,eAAe,MAAM,IAAI;AAAA,EAC5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,WAAW;AACT,SAAK,YAAY;AACjB,WAAO,KAAK,SAAS,WAAW;AAAA,EAClC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,SAAS,OAAO;AACd,SAAK,YAAY;AACjB,UAAM,MAAM,KAAK,KAAK;AACtB,QAAI,KAAK,SAAS,MAAM,UAAU;AAChC,WAAK,UAAU,YAAY,KAAK,cAAc,KAAK,SAAS,CAAC,CAAC;AAC9D,WAAK,SAAS,OAAO,YAAY;AAAA,IACnC;AACA,QAAI,UAAU,UAAU;AACtB,WAAK,UAAU,SAAS,KAAK,cAAc,KAAK,CAAC;AACjD,WAAK,SAAS,IAAI,cAAc,KAAK;AAAA,IACvC;AACA,SAAK,SAAS,IAAI,KAAK;AAAA,EACzB;AAAA;AAAA;AAAA;AAAA,EAIA,cAAc;AACZ,QAAI,CAAC,KAAK,SAAS,GAAG;AACpB,YAAM,UAAU,KAAK,SAAS,IAAI,YAAY;AAC9C,WAAK,SAAS,IAAI,UAAU,UAAU,QAAQ;AAAA,IAChD;AAAA,EACF;AAAA,EACA,OAAO;AACL,SAAK,OAAO,SAAS,qBAAqB,mBAAmB;AAC3D,aAAO,KAAK,qBAAqB,eAAiB,SAAY,gBAAgB,CAAC;AAAA,IACjF;AAAA,EACF;AAAA,EACA,OAAO;AACL,SAAK,QAA0B,mBAAmB;AAAA,MAChD,OAAO;AAAA,MACP,SAAS,cAAa;AAAA,MACtB,YAAY;AAAA,IACd,CAAC;AAAA,EACH;AACF;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,cAAc,CAAC;AAAA,IACrF,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,YAAY;AAAA,IACd,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,CAAC;AAAA,IACT,MAAS;AAAA,EACX,CAAC,GAAG,IAAI;AACV,GAAG;AACH,IAAM,iBAAiB;AAAA,EACrB,CAAC,QAAQ,GAAG;AAAA,EACZ,CAAC,OAAO,GAAG;AAAA,EACX,CAAC,MAAM,GAAG;AACZ;AACA,IAAM,iBAAN,MAAM,gBAAe;AAAA,EACnB,UAAU,OAAO;AACf,WAAO,eAAe,KAAK;AAAA,EAC7B;AAAA,EACA,OAAO;AACL,SAAK,OAAO,SAAS,uBAAuB,mBAAmB;AAC7D,aAAO,KAAK,qBAAqB,iBAAgB;AAAA,IACnD;AAAA,EACF;AAAA,EACA,OAAO;AACL,SAAK,QAA0B,aAAa;AAAA,MAC1C,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,IACR,CAAC;AAAA,EACH;AACF;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,gBAAgB,CAAC;AAAA,IACvF,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,MAAM;AAAA,IACR,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AACH,IAAM,YAAY,CAAC,UAAU,SAAS,MAAM;AAC5C,IAAM,gBAAgB;AAAA,EACpB,CAAC,QAAQ,GAAG;AAAA,EACZ,CAAC,OAAO,GAAG;AAAA,EACX,CAAC,MAAM,GAAG;AACZ;AACA,IAAM,uBAAN,MAAM,sBAAqB;AAAA,EACzB,cAAc;AACZ,SAAK,SAAS,OAAO,YAAY;AACjC,SAAK,eAAe,KAAK,OAAO,SAAS;AACzC,SAAK,WAAW,MAAM,KAAK;AAC3B,SAAK,gBAAgB;AAAA,EACvB;AAAA,EACA,gBAAgB;AACd,UAAM,aAAa,UAAU,UAAU,OAAK,MAAM,KAAK,aAAa,CAAC;AACrE,UAAM,UAAU,aAAa,KAAK,UAAU;AAC5C,SAAK,OAAO,SAAS,UAAU,MAAM,CAAC;AAAA,EACxC;AAAA,EACA,OAAO;AACL,SAAK,OAAO,SAAS,6BAA6B,mBAAmB;AACnE,aAAO,KAAK,qBAAqB,uBAAsB;AAAA,IACzD;AAAA,EACF;AAAA,EACA,OAAO;AACL,SAAK,OAAyB,kBAAkB;AAAA,MAC9C,MAAM;AAAA,MACN,WAAW,CAAC,CAAC,kBAAkB,CAAC;AAAA,MAChC,QAAQ;AAAA,QACN,UAAU,CAAC,GAAG,UAAU;AAAA,MAC1B;AAAA,MACA,OAAO;AAAA,MACP,MAAM;AAAA,MACN,QAAQ,CAAC,CAAC,GAAG,SAAS,OAAO,GAAG,CAAC,QAAQ,OAAO,GAAG,MAAM,CAAC;AAAA,MAC1D,UAAU,SAAS,8BAA8B,IAAI,KAAK;AACxD,YAAI,KAAK,GAAG;AACV,UAAG,eAAe,GAAG,UAAU,CAAC;AAChC,UAAG,OAAO,GAAG,YAAY;AACzB,UAAG,WAAW,SAAS,SAAS,wDAAwD;AACtF,mBAAO,IAAI,cAAc;AAAA,UAC3B,CAAC;AACD,UAAG,WAAW,GAAG,6CAA6C,GAAG,GAAG,MAAM;AAC1E,UAAG,UAAU,GAAG,YAAY,CAAC;AAC7B,UAAG,aAAa;AAAA,QAClB;AACA,YAAI,KAAK,GAAG;AACV,UAAG,WAAW,SAAS,CAAC,IAAI,SAAS,IAAI,6BAAgC,YAAY,GAAG,GAAG,IAAI,aAAa,CAAC,CAAC;AAC9G,UAAG,UAAU,CAAC;AACd,UAAG,cAAc,CAAC,IAAI,SAAS,IAAI,IAAI,EAAE;AACzC,UAAG,UAAU;AACb,UAAG,WAAW,QAAQ,IAAI,cAAc,IAAI,aAAa,CAAC,CAAC;AAAA,QAC7D;AAAA,MACF;AAAA,MACA,cAAc,CAAC,eAAe,cAAc;AAAA,MAC5C,QAAQ,CAAC,orBAAorB;AAAA,MAC7rB,iBAAiB;AAAA,IACnB,CAAC;AAAA,EACH;AACF;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,sBAAsB,CAAC;AAAA,IAC7F,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,SAAS,CAAC,eAAe,cAAc;AAAA,MACvC,iBAAiB,wBAAwB;AAAA,MACzC,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACV,QAAQ,CAAC,ieAAie;AAAA,IAC5e,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AACH,IAAM,mBAAmB,CAAC,oBAAoB;",
  "names": []
}
