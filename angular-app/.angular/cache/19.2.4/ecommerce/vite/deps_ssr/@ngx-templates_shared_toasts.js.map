{
  "version": 3,
  "sources": ["../../../../../../node_modules/@ngx-templates/shared/fesm2022/ngx-templates-shared-toasts.mjs"],
  "sourcesContent": ["import * as i0 from '@angular/core';\nimport { input, ChangeDetectionStrategy, Component, signal, Injectable, inject, computed } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { IconComponent } from '@ngx-templates/shared/icon';\nimport { List } from 'immutable';\nfunction ToastComponent_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ngx-icon\", 1);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"name\", ctx_r0.toast().config.icon);\n  }\n}\nconst _forTrack0 = ($index, $item) => $item.createdAt;\nfunction ToastOutletComponent_For_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ngx-toast\", 1);\n  }\n  if (rf & 2) {\n    const toast_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"toast\", toast_r1);\n  }\n}\nfunction ToastOutletComponent_For_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ngx-toast\", 1);\n  }\n  if (rf & 2) {\n    const toast_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"toast\", toast_r2);\n  }\n}\nvar ToastType;\n(function (ToastType) {\n  /**\n   * Standard small toast that appears at the top of the viewport.\n   */\n  ToastType[\"Default\"] = \"default\";\n  /**\n   * A notification-like toast that is rendered at the bottom right\n   * portion of the viewport.\n   */\n  ToastType[\"Notification\"] = \"notification\";\n})(ToastType || (ToastType = {}));\nconst TYPE_TO_CLASS = {\n  default: 'def-type',\n  notification: 'ntf-type'\n};\nclass ToastComponent {\n  constructor() {\n    this.toast = input.required();\n    this.ToastType = ToastType;\n    this.TYPE_TO_CLASS = TYPE_TO_CLASS;\n  }\n  static {\n    this.ɵfac = function ToastComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ToastComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: ToastComponent,\n      selectors: [[\"ngx-toast\"]],\n      inputs: {\n        toast: [1, \"toast\"]\n      },\n      decls: 4,\n      vars: 3,\n      consts: [[\"title\", \"Close toast\", 3, \"click\", \"ngClass\"], [\"size\", \"lg\", 3, \"name\"]],\n      template: function ToastComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"button\", 0);\n          i0.ɵɵlistener(\"click\", function ToastComponent_Template_button_click_0_listener() {\n            return ctx.toast().destroy();\n          });\n          i0.ɵɵtemplate(1, ToastComponent_Conditional_1_Template, 1, 1, \"ngx-icon\", 1);\n          i0.ɵɵelementStart(2, \"span\");\n          i0.ɵɵtext(3);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngClass\", ctx.TYPE_TO_CLASS[ctx.toast().config.type]);\n          i0.ɵɵadvance();\n          i0.ɵɵconditional(ctx.toast().config.type === ctx.ToastType.Notification && ctx.toast().config.icon ? 1 : -1);\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate(ctx.toast().name);\n        }\n      },\n      dependencies: [CommonModule, i1.NgClass, IconComponent],\n      styles: [\"[_nghost-%COMP%]   button.ntf-type[_ngcontent-%COMP%]{font-size:.875rem;font-style:normal;line-height:1rem}@media (max-width: 640px){[_nghost-%COMP%]   button.ntf-type[_ngcontent-%COMP%]{font-size:1rem}}[_nghost-%COMP%]   button.def-type[_ngcontent-%COMP%]{font-size:.75rem}[_nghost-%COMP%]{display:block}[_nghost-%COMP%]   button[_ngcontent-%COMP%]{display:block;border:none;margin-bottom:.5rem}[_nghost-%COMP%]   button.def-type[_ngcontent-%COMP%]{padding:.25rem .875rem;border-radius:.25rem;background:var(--gradient-pink-to-violet);box-shadow:0 2px 5px #0003;color:var(--white);animation:_ngcontent-%COMP%_slide-down .3s ease;animation-iteration-count:1;animation-fill-mode:forwards}[_nghost-%COMP%]   button.ntf-type[_ngcontent-%COMP%]{padding:.75rem 1rem;border-radius:.25rem;max-width:250px;text-align:left;color:var(--color-electric-lavander);background-color:var(--color-septenary);border:1px solid var(--color-french-violet);box-shadow:0 2px 2px #0000001a;animation:_ngcontent-%COMP%_slide-right .3s ease;animation-iteration-count:1;animation-fill-mode:forwards;display:flex;align-items:center;line-height:1.25rem}[_nghost-%COMP%]   button.ntf-type[_ngcontent-%COMP%]   ngx-icon[_ngcontent-%COMP%]{margin-right:.75rem}@keyframes _ngcontent-%COMP%_slide-down{0%{opacity:0;transform:translateY(0)}to{opacity:1;transform:translateY(4.5rem)}}@keyframes _ngcontent-%COMP%_slide-right{0%{opacity:0;transform:translate(0)}to{opacity:1;transform:translate(1.5rem)}}\"],\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ToastComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-toast',\n      imports: [CommonModule, IconComponent],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<button\\n  (click)=\\\"toast().destroy()\\\"\\n  title=\\\"Close toast\\\"\\n  [ngClass]=\\\"TYPE_TO_CLASS[toast().config.type]\\\"\\n>\\n  @if (toast().config.type === ToastType.Notification && toast().config.icon) {\\n    <ngx-icon [name]=\\\"toast().config.icon!\\\" size=\\\"lg\\\" />\\n  }\\n  <span>{{ toast().name }}</span>\\n</button>\\n\",\n      styles: [\":host button.ntf-type{font-size:.875rem;font-style:normal;line-height:1rem}@media (max-width: 640px){:host button.ntf-type{font-size:1rem}}:host button.def-type{font-size:.75rem}:host{display:block}:host button{display:block;border:none;margin-bottom:.5rem}:host button.def-type{padding:.25rem .875rem;border-radius:.25rem;background:var(--gradient-pink-to-violet);box-shadow:0 2px 5px #0003;color:var(--white);animation:slide-down .3s ease;animation-iteration-count:1;animation-fill-mode:forwards}:host button.ntf-type{padding:.75rem 1rem;border-radius:.25rem;max-width:250px;text-align:left;color:var(--color-electric-lavander);background-color:var(--color-septenary);border:1px solid var(--color-french-violet);box-shadow:0 2px 2px #0000001a;animation:slide-right .3s ease;animation-iteration-count:1;animation-fill-mode:forwards;display:flex;align-items:center;line-height:1.25rem}:host button.ntf-type ngx-icon{margin-right:.75rem}@keyframes slide-down{0%{opacity:0;transform:translateY(0)}to{opacity:1;transform:translateY(4.5rem)}}@keyframes slide-right{0%{opacity:0;transform:translate(0)}to{opacity:1;transform:translate(1.5rem)}}\\n\"]\n    }]\n  }], null, null);\n})();\nconst DEFAULT_CFG = {\n  ttl: 1000,\n  type: ToastType.Default\n};\n/**\n * Toast item\n */\nclass Toast {\n  constructor(name, _list, config) {\n    this.name = name;\n    this._list = _list;\n    this.createdAt = new Date().getTime();\n    this.destroyPromise = new Promise(res => {\n      this._destroyResolver = res;\n    });\n    this.config = {\n      ...DEFAULT_CFG,\n      ...config\n    };\n    this._destroyTimeout = setTimeout(() => this.destroy(), this.config.ttl);\n  }\n  /**\n   * Remove the toast from the list (i.e. the DOM)\n   */\n  destroy() {\n    if (this._destroyTimeout) {\n      clearTimeout(this._destroyTimeout);\n    }\n    const list = this._list();\n    const idx = list.findIndex(t => t === this);\n    this._list.update(l => l.remove(idx));\n    this._destroyResolver();\n  }\n}\n\n/**\n * Provides a very simple interface for\n * creation of notification toasts.\n */\nclass ToastsService {\n  constructor() {\n    this._toasts = signal(List([]));\n    this.value = this._toasts.asReadonly();\n  }\n  create(text, config) {\n    const toast = new Toast(text, this._toasts, config);\n    this._toasts.update(l => l.push(toast));\n    return toast.destroyPromise;\n  }\n  static {\n    this.ɵfac = function ToastsService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ToastsService)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: ToastsService,\n      factory: ToastsService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ToastsService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nclass ToastOutletComponent {\n  constructor() {\n    this.toasts = inject(ToastsService);\n    this.default = computed(() => this.toasts.value().filter(t => t.config.type === ToastType.Default));\n    this.notifications = computed(() => this.toasts.value().filter(t => t.config.type === ToastType.Notification));\n  }\n  static {\n    this.ɵfac = function ToastOutletComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ToastOutletComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: ToastOutletComponent,\n      selectors: [[\"ngx-toast-outlet\"]],\n      decls: 6,\n      vars: 0,\n      consts: [[1, \"outlet\", \"default\"], [3, \"toast\"], [1, \"outlet\", \"notifications\"]],\n      template: function ToastOutletComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵrepeaterCreate(1, ToastOutletComponent_For_2_Template, 1, 1, \"ngx-toast\", 1, _forTrack0);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"div\", 2);\n          i0.ɵɵrepeaterCreate(4, ToastOutletComponent_For_5_Template, 1, 1, \"ngx-toast\", 1, _forTrack0);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance();\n          i0.ɵɵrepeater(ctx.default());\n          i0.ɵɵadvance(3);\n          i0.ɵɵrepeater(ctx.notifications());\n        }\n      },\n      dependencies: [ToastComponent],\n      styles: [\"[_nghost-%COMP%]   .outlet[_ngcontent-%COMP%]{position:fixed;width:100%;height:0}[_nghost-%COMP%]   .outlet.default[_ngcontent-%COMP%]{top:0;left:0;display:flex;flex-direction:column;align-items:center}[_nghost-%COMP%]   .outlet.notifications[_ngcontent-%COMP%]{bottom:16px;left:0;display:flex;flex-direction:column-reverse;align-items:flex-start}\"],\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ToastOutletComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-toast-outlet',\n      imports: [ToastComponent],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<div class=\\\"outlet default\\\">\\n  @for (toast of default(); track toast.createdAt) {\\n    <ngx-toast [toast]=\\\"toast\\\" />\\n  }\\n</div>\\n<div class=\\\"outlet notifications\\\">\\n  @for (toast of notifications(); track toast.createdAt) {\\n    <ngx-toast [toast]=\\\"toast\\\" />\\n  }\\n</div>\\n\",\n      styles: [\":host .outlet{position:fixed;width:100%;height:0}:host .outlet.default{top:0;left:0;display:flex;flex-direction:column;align-items:center}:host .outlet.notifications{bottom:16px;left:0;display:flex;flex-direction:column-reverse;align-items:flex-start}\\n\"]\n    }]\n  }], null, null);\n})();\nconst TOASTS_COMPONENTS = [ToastOutletComponent];\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TOASTS_COMPONENTS, ToastOutletComponent, ToastType, ToastsService };\n"],
  "mappings": "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",
  "names": ["ToastType"]
}
